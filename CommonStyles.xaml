<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:valueConvertor="clr-namespace:MultipleUserLoginForm.ValueConvertors"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:local="clr-namespace:MultipleUserLoginForm">
    
    <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#000" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="17" />
        <Setter Property="Height" Value="17" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Width="17"
                        Height="17"
                        Background="Transparent">
                        <Border
                            Width="17"
                            Height="17"
                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                            BorderBrush="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                            BorderThickness="1"
                            SnapsToDevicePixels="true">
                            <Grid>
                                <Rectangle>
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Offset="0" Color="#7FD4FF" />
                                            <GradientStop Offset="1" Color="#00AAFF" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Line
                                    x:Name="ExpandImg"
                                    Stroke="#112844"
                                    StrokeThickness="1"
                                    X1="8"
                                    X2="8"
                                    Y1="2"
                                    Y2="14" />
                                <Line
                                    Stroke="#112844"
                                    StrokeThickness="1"
                                    X1="2"
                                    X2="14"
                                    Y1="8"
                                    Y2="8" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandImg" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="19" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton
                            x:Name="Expander"
                            ClickMode="Press"
                            IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ExpandCollapseToggleStyle}" />
                        <Border
                            x:Name="Bd"
                            Grid.Column="1"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="PART_Header"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                ContentSource="Header"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ItemsPresenter
                            x:Name="ItemsHost"
                            Grid.Row="1"
                            Grid.Column="1"
                            Grid.ColumnSpan="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <DataTemplate x:Key="EmployeeDateTemplate">
        <DataTemplate.Resources>
            <valueConvertor:TreeViewActualSizeConverter x:Key="TreeViewActualSizeConverter"/>
        </DataTemplate.Resources>
        <Border
           
            HorizontalAlignment="Stretch"
            BorderBrush="HotPink"
            BorderThickness="2.5" CornerRadius="10">

            <Grid HorizontalAlignment="Stretch"
             Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}, Path=ActualWidth, Mode=OneWay,
                Converter={StaticResource TreeViewActualSizeConverter}}" Height="Auto"  
                  
                 >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <materialDesign:PackIcon Kind="FileOutline" Margin="5"
                                         Height="30" Width="30" Foreground="DarkBlue"/>

                <TextBlock
                    Grid.Column="1" FontSize="16"
                    Margin="10,5,5,5"
                    VerticalAlignment="Center"
                    FontWeight="Bold"
                    TextWrapping="Wrap"
                    Text="{Binding Object.Name}" />
                <TextBlock
                    Grid.Column="2" FontSize="16"
                    Margin="10,5,5,5"
                    VerticalAlignment="Center"
                    FontWeight="Bold"
                    TextWrapping="Wrap"
                    Text="{Binding Object.MandatoryMark}" />

                <TextBlock
                    Grid.Column="3" FontSize="16"
                    VerticalAlignment="Center"
                    Margin="5"
                    FontWeight="Bold"
                    Foreground="Red"
                    Text="{Binding RightName}" />



            </Grid>
           
        </Border>
    </DataTemplate>
    <HierarchicalDataTemplate
        x:Key="DepartmentTemplate"
        ItemTemplate="{StaticResource EmployeeDateTemplate}"
        ItemsSource="{Binding Objects}">
        <HierarchicalDataTemplate.Resources>
            <valueConvertor:TreeViewActualSizeConverter x:Key="TreeViewActualSizeConverter"/>

        </HierarchicalDataTemplate.Resources>
        <Border BorderBrush="DarkBlue" BorderThickness="2.5" CornerRadius="10">
              <Grid HorizontalAlignment="Stretch"
               Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}, Path=ActualWidth, Mode=OneWay,
    Converter={StaticResource TreeViewActualSizeConverter}}" Height="Auto"
              >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
                  
                <materialDesign:PackIcon Kind="UserOutline" Margin="5" Grid.Column="0"
                                         Width="50" Height="50" Foreground="DarkBlue"/>


                <TextBlock
                Grid.Column="1"
                Margin="10,5,5,5"
                VerticalAlignment="Center"
                FontWeight="SemiBold"
                    TextWrapping="Wrap"
                Text="{Binding Subject.Login}" 
                    FontSize="16"
                    />
                  <TextBlock
                Grid.Column="2"
                Margin="10,5,5,5"
                VerticalAlignment="Center"
                FontWeight="SemiBold"
                    TextWrapping="Wrap"
                Text="{Binding Subject.MandatoryMark}" 
                    FontSize="16"
                    />
                  

                <TextBlock Grid.Column="3" VerticalAlignment="Center"
                       FontSize="16" TextWrapping="Wrap" Margin="5">
                    <TextBlock.Inlines>
                    <Run FontWeight="Medium" Text="{Binding Subject.Name}" />

                    <Run FontWeight="Medium" Text="{Binding Subject.SecondName}" />

                </TextBlock.Inlines>
            </TextBlock>

        </Grid>
        </Border>
      

    </HierarchicalDataTemplate>
</ResourceDictionary>